apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: netbird-router
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: netbird-router
  template:
    metadata:
      labels:
        app.kubernetes.io/name: netbird-router
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      hostNetwork: true
      initContainers:
        - name: init-iptables
          image: alpine
          command:
            - sh
            - -c
            - |
              apk add --no-cache iptables
              iptables -t nat -A POSTROUTING -o wt0 -j MASQUERADE
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
            privileged: true
      containers:
        - name: netbird
          image: netbirdio/netbird:latest
          env:
            - name: NB_SETUP_KEY
              valueFrom:
                secretKeyRef:
                  name: netbird-router-key
                  key: setup-key
            - name: NB_MANAGEMENT_URL
              valueFrom:
                secretKeyRef:
                  name: netbird-router-key
                  key: management-url
            - name: NB_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: NB_DISABLE_DNS
              value: "true"
            - name: NB_LOG_LEVEL
              value: "info"
            - name: NB_USE_LEGACY_ROUTING
              value: "true"
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
            privileged: true
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"